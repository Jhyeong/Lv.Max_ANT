{"version":3,"sources":["components/SideMenu/images/LvMaxANT.jpg","components/Header/Header.js","components/SideMenu/SideMenuHeader.js","components/SideMenu/SideMenuBody.js","components/SideMenu/SideMenu.js","components/PostWrapper/PostWrapper.js","components/Post/Post.js","components/StockList/StockList.js","components/StockListRow/StockListRow.js","containers/ContentContainer/ContentContainer.js","services/stock.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","SideMenuHeader","to","SideMenuBody","props","handleItemClick","bind","state","selectedId","e","this","setState","target","id","onClick","Component","SideMenu","PostWrapper","children","Post","resultDataList","title","StockList","dataList","map","data","index","key","StockListRow","ContentContainer","getSearchedStockItems","a","Promise","all","axios","get","result","exact","path","render","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6f1a8e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LvMaxANT.468143bd.jpg\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => (\r\n  <div className=\"Header\">\r\n    \r\n  </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SideMenuHeader.css';\r\nimport logo from './images/LvMaxANT.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SideMenuHeader = () => (\r\n    <Link to=\"/\">\r\n        <div className=\"SideMenuHeader\">\r\n                <div className=\"LogoDiv\">\r\n                    {/* <img src={logo} className=\"LogoImg\"/> */}\r\n                    <h1>만렙 개미 프로젝트</h1>\r\n                    <p>Lv.Max ANT</p>\r\n                </div>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\n\r\nexport default SideMenuHeader;","import React, { Component } from 'react';\r\nimport './SideMenuBody.css';\r\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nclass SideMenuBody extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleItemClick = this.handleItemClick.bind(this);\r\n        this.state = {\r\n            selectedId : 1\r\n        }\r\n    }\r\n\r\n    //클릭한 메뉴 활성화\r\n    handleItemClick(e){\r\n        this.setState({\r\n            selectedId : e.target.id\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"SideMenuBody\">\r\n                <div className=\"ItemWrapper ui secondary vertical menu\">\r\n                    <Link to=\"/searchedstockitems\">\r\n                        <div className={this.state.selectedId == 1? \"active item\" : \"item\"}\r\n                            id=\"1\"\r\n                            onClick={this.handleItemClick}\r\n                        >조건검색 조회\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/checkbalance\">\r\n                        <div className={this.state.selectedId == 2? \"active item\" : \"item\"}\r\n                            id=\"2\"\r\n                            onClick={this.handleItemClick}\r\n                        >\r\n                        정산결과 조회\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideMenuBody;","import React from 'react';\r\nimport SideMenuHeader from './SideMenuHeader'\r\nimport SideMenuBody from './SideMenuBody'\r\nimport './SideMenu.css';\r\n\r\nconst SideMenu = () => (\r\n    <div className=\"SideMenu\">\r\n        <SideMenuHeader></SideMenuHeader>\r\n        <SideMenuBody></SideMenuBody>\r\n    </div>\r\n)\r\n\r\n\r\nexport default SideMenu;","import React from 'react';\r\nimport './PostWrapper.css';\r\n\r\nconst PostWrapper = ({children}) => {\r\n    return (\r\n        <div className=\"PostWrapper\">\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostWrapper;","import React, { Component } from 'react';\r\nimport './Post.css';\r\nimport { StockList } from '../';\r\n\r\n\r\nconst Post = ({resultDataList, title}) =>(\r\n    <div className=\"Post\">\r\n        <h1>{title}</h1>\r\n        <StockList resultDataList={resultDataList}/>\r\n    </div>\r\n)\r\n\r\nexport default Post;","import React from 'react';\r\nimport {StockListRow} from '../';\r\nimport './StockList.css';\r\n\r\nconst StockList = ({resultDataList}) => {\r\n    let dataList;\r\n    \r\n    /** 조회된 데이터 리스트를 이용해 row 생성*/\r\n    if(resultDataList){\r\n        dataList = resultDataList.map((data, index) => (\r\n            <StockListRow \r\n                key = {index}\r\n                data = {data}\r\n                index = {index}\r\n            />\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <table className=\"ui yellow table\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>No</td>\r\n                    <td>종목코드</td>\r\n                    <td>종목명</td>\r\n                    <td>검색일</td>\r\n                    <td>현재가</td>\r\n                    <td>전일대비</td>\r\n                    <td>등락률</td>\r\n                </tr>\r\n                {dataList}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\n\r\nexport default StockList;","import React from 'react';\r\nimport './StockListRow.css';\r\n\r\nconst StockListRow = ({data, index}) => {\r\n    return (\r\n        <tr className=\"StockListRow\">\r\n            <td>\r\n                {index + 1}\r\n            </td>\r\n            <td>\r\n                {data[\"STOCK_CODE\"]}\r\n            </td>\r\n            <td>\r\n                {data[\"STOCK_NAME\"]}\r\n            </td>\r\n            <td>\r\n                {data[\"SEARCH_DATE\"]}\r\n            </td>\r\n            <td>\r\n                {data[\"CURRENT_PRICE\"]}\r\n            </td>\r\n            <td>\r\n                {data[\"COMPARE_YSTDAY\"]}\r\n            </td>\r\n            <td>\r\n                {data[\"PERCENT\"]}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default StockListRow;","import React, { Component } from 'react';\r\nimport {PostWrapper, Post} from '../../components';\r\nimport * as service from '../../services/stock';\r\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nclass ContentContainer extends Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            dataList : []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSearchedStockItems();\r\n    }\r\n\r\n    getSearchedStockItems = async () => {\r\n        const result = await Promise.all([\r\n            service.getSearchedStockItems()\r\n        ]);\r\n        \r\n        this.setState({\r\n            resultDataList : result[0].data\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const resultDataList = this.state.resultDataList;\r\n\r\n        return (\r\n            <PostWrapper>\r\n                <Route exact path=\"/\"/>\r\n                <Route exact path=\"/searchedstockitems\" render={()=> <Post resultDataList = {resultDataList} title=\"조건검색 조회\"/>}/>\r\n                <Route exact path=\"/checkbalance\"       render={()=> <Post resultDataList = {resultDataList} title=\"정산결과 조회\"/>}/>\r\n            </PostWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentContainer;","import axios from 'axios';\r\n\r\nexport function getSearchedStockItems(){\r\n    return axios.get(\"/searchedstockitem\");\r\n}","import React, { Component } from 'react';\nimport { Header, SideMenu } from './components';\nimport { ContentContainer } from './containers';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass App extends Component{\n  render(){\n    return (\n      <div>\n        <Router>\n          <Header></Header>\n          <SideMenu></SideMenu>\n          <ContentContainer></ContentContainer>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n   <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}